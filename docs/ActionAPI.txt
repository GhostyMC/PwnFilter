The Action API aims to make PwnFilter Actions pluggable.

Actions are performed on ActionTargets.

Actions are registered with the ActionFactory.  The action is registered
with a text-string, which will become the keyword that the action uses.

The ActionFactory list is searched for Actions, both internal, and those
registered by other modules.

Actions will try to execute a named function on the target object first.  If
the target object doesn't support the function, the action can execute a default
behaviour, for example, to modify the text, create a log entry, etc.

At the moment, an action can only be registered once.

There are a couple of discrete functions that must be performed around Actions:

1. An Action configuration must be parsed from a source (file, stream, etc.)
  This parsing should be able to validate that the parameters are valid, and
  throw an exception if not.

2. An Action must be executable.  It need not execute against a Player or
  even an entity representing a human.  Eg: A "replace" action executes on the
  message passed into the filter.  The Action system must therefore be flexible
  enough to accommodate such use-cases.

The actual implementation of the action may be handled by the target object.
For example, if the Action is to burn a player, the ActionBurn execute() call
will, in turn, call the burn() action on the